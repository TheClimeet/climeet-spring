name: Monthly Certificate Renewal and Deployment

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test'

jobs:
  update-cert-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # EC2에서 인증서 파일 복사
      - name: Copy certificate files from EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.RELEASE_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.RELEASE_SSH_KEY }}
          source: "/home/ubuntu/keystore-dev.p12"
          target: "./config/"
          debug: true
          port: 22
          rm: false
          overwrite: true

      #서브 모듈 접근
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CLIMEET_ACTION_TOKEN }}
          submodules: true

      # 서브모듈 변경 사항 커밋 및 푸시
      - name: Commit and push submodule changes
        run: |
          cd path-to-submodule
          git config --global user.email gourderased@gmail.com
          git config --global user.name gourderased
          git add keystore-dev.p12
          git commit -m "Update submodule dev-certificate"
          git push

      # gradlew 권한 변경
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 빌드(test는 제외)
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean build -x test

      # Docker 이미지 빌드 (Release Branch)
      - name: Docker 이미지 빌드 (Release Branch)
        run: docker build --build-arg SPRING_PROFILE=dev -t gourderased/spring-project:latest .

      # DockerHub 로그인
      - name: Docker - Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker Hub 이미지 푸시
      - name: Docker Hub 퍼블리시
        run: docker push gourderased/spring-project:latest

      # Deploy to EC2 (Release Branch)
      - name: Deploy to EC2 (Release Branch)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RELEASE_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.RELEASE_SSH_KEY }}
          script: |
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker rm $(sudo docker ps -a -q)
            sudo docker pull gourderased/spring-project:latest
            sudo docker run -d -p 8080:8080 --name climeet-dev-server -e SPRING_PROFILE=dev -e TZ=Asia/Seoul gourderased/spring-project:latest
